// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PiRiS.Data.Context;

#nullable disable

namespace PiRiS.Data.Migrations
{
    [DbContext(typeof(BankDbContext))]
    partial class BankDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PiRiS.Data.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AccountId"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("AccountPlanId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Credit")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Debit")
                        .HasColumnType("numeric");

                    b.HasKey("AccountId");

                    b.HasIndex("AccountNumber")
                        .IsUnique();

                    b.HasIndex("AccountPlanId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("PiRiS.Data.Models.AccountPlan", b =>
                {
                    b.Property<int>("AccountPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AccountPlanId"));

                    b.Property<int>("AccountType")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AccountPlanId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("AccountPlans");
                });

            modelBuilder.Entity("PiRiS.Data.Models.BankInformation", b =>
                {
                    b.Property<int>("BankInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BankInformationId"));

                    b.Property<DateTime>("CurrentDay")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("BankInformationId");

                    b.ToTable("BankInformation");
                });

            modelBuilder.Entity("PiRiS.Data.Models.Citizenship", b =>
                {
                    b.Property<int>("CitizenshipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CitizenshipId"));

                    b.Property<string>("CitizenshipName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CitizenshipId");

                    b.ToTable("Citizenships");
                });

            modelBuilder.Entity("PiRiS.Data.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CityId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("PiRiS.Data.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClientId"));

                    b.Property<int>("CitizenshipId")
                        .HasColumnType("integer");

                    b.Property<int>("CityId")
                        .HasColumnType("integer");

                    b.Property<string>("Company")
                        .HasColumnType("text");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfIssue")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DisabilityId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("FamilyStatusId")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HomePhone")
                        .HasColumnType("text");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsPensioner")
                        .HasColumnType("boolean");

                    b.Property<string>("IssuedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JobTitle")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LocationAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("text");

                    b.Property<decimal?>("MonthIncome")
                        .HasColumnType("numeric");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PassportSeries")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlaceOfBirth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RegistrationAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ClientId");

                    b.HasIndex("CitizenshipId");

                    b.HasIndex("CityId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DisabilityId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("FamilyStatusId");

                    b.HasIndex("HomePhone");

                    b.HasIndex("IdentificationNumber")
                        .IsUnique();

                    b.HasIndex("MobilePhone")
                        .IsUnique();

                    b.HasIndex("PassportNumber", "PassportSeries")
                        .IsUnique();

                    b.HasIndex("Surname", "FirstName", "LastName")
                        .IsUnique();

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("PiRiS.Data.Models.Credit", b =>
                {
                    b.Property<int>("CreditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CreditId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<string>("CreditCardCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("character varying(4)");

                    b.Property<string>("CreditCardNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)");

                    b.Property<string>("CreditNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CreditPlanId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MainAccountId")
                        .HasColumnType("integer");

                    b.Property<int>("PercentAccountId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Sum")
                        .HasColumnType("numeric");

                    b.HasKey("CreditId");

                    b.HasIndex("ClientId");

                    b.HasIndex("CreditCardCode");

                    b.HasIndex("CreditCardNumber")
                        .IsUnique();

                    b.HasIndex("CreditNumber")
                        .IsUnique();

                    b.HasIndex("CreditPlanId");

                    b.HasIndex("MainAccountId");

                    b.HasIndex("PercentAccountId");

                    b.ToTable("Credits");
                });

            modelBuilder.Entity("PiRiS.Data.Models.CreditPlan", b =>
                {
                    b.Property<int>("CreditPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CreditPlanId"));

                    b.Property<int>("CreditType")
                        .HasColumnType("integer");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("integer");

                    b.Property<int>("MainAccountPlanId")
                        .HasColumnType("integer");

                    b.Property<int>("MonthPeriod")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Percent")
                        .HasColumnType("double precision");

                    b.Property<int>("PercentAccountPlanId")
                        .HasColumnType("integer");

                    b.HasKey("CreditPlanId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("MainAccountPlanId");

                    b.HasIndex("PercentAccountPlanId");

                    b.ToTable("CreditPlans");
                });

            modelBuilder.Entity("PiRiS.Data.Models.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CurrencyId"));

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("PiRiS.Data.Models.Deposit", b =>
                {
                    b.Property<int>("DepositId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DepositId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<string>("DepositNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DepositPlanId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MainAccountId")
                        .HasColumnType("integer");

                    b.Property<int>("PercentAccountId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Sum")
                        .HasColumnType("numeric");

                    b.HasKey("DepositId");

                    b.HasIndex("ClientId");

                    b.HasIndex("DepositNumber")
                        .IsUnique();

                    b.HasIndex("DepositPlanId");

                    b.HasIndex("MainAccountId");

                    b.HasIndex("PercentAccountId");

                    b.ToTable("Deposits");
                });

            modelBuilder.Entity("PiRiS.Data.Models.DepositPlan", b =>
                {
                    b.Property<int>("DepositPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DepositPlanId"));

                    b.Property<int>("CurrencyId")
                        .HasColumnType("integer");

                    b.Property<int>("DayPeriod")
                        .HasColumnType("integer");

                    b.Property<int>("DepositType")
                        .HasColumnType("integer");

                    b.Property<int>("MainAccountPlanId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Percent")
                        .HasColumnType("double precision");

                    b.Property<int>("PercentAccountPlanId")
                        .HasColumnType("integer");

                    b.HasKey("DepositPlanId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("MainAccountPlanId");

                    b.HasIndex("PercentAccountPlanId");

                    b.ToTable("DepositPlans");
                });

            modelBuilder.Entity("PiRiS.Data.Models.Disability", b =>
                {
                    b.Property<int>("DisabilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DisabilityId"));

                    b.Property<string>("DisabilityStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DisabilityId");

                    b.ToTable("Disabilities");
                });

            modelBuilder.Entity("PiRiS.Data.Models.FamilyStatus", b =>
                {
                    b.Property<int>("FamilyStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FamilyStatusId"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("FamilyStatusId");

                    b.ToTable("FamilyStatuses");
                });

            modelBuilder.Entity("PiRiS.Data.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransactionId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("CreditAccountId")
                        .HasColumnType("integer");

                    b.Property<int>("DebitAccountId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TransactionDay")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("TransactionId");

                    b.HasIndex("CreditAccountId");

                    b.HasIndex("DebitAccountId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("PiRiS.Data.Models.Account", b =>
                {
                    b.HasOne("PiRiS.Data.Models.AccountPlan", "AccountPlan")
                        .WithMany("Accounts")
                        .HasForeignKey("AccountPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountPlan");
                });

            modelBuilder.Entity("PiRiS.Data.Models.Client", b =>
                {
                    b.HasOne("PiRiS.Data.Models.Citizenship", "Citizenship")
                        .WithMany()
                        .HasForeignKey("CitizenshipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PiRiS.Data.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PiRiS.Data.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("PiRiS.Data.Models.Disability", "Disability")
                        .WithMany()
                        .HasForeignKey("DisabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PiRiS.Data.Models.FamilyStatus", "FamilyStatus")
                        .WithMany()
                        .HasForeignKey("FamilyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Citizenship");

                    b.Navigation("City");

                    b.Navigation("Currency");

                    b.Navigation("Disability");

                    b.Navigation("FamilyStatus");
                });

            modelBuilder.Entity("PiRiS.Data.Models.Credit", b =>
                {
                    b.HasOne("PiRiS.Data.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PiRiS.Data.Models.CreditPlan", "CreditPlan")
                        .WithMany("Credits")
                        .HasForeignKey("CreditPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PiRiS.Data.Models.Account", "MainAccount")
                        .WithMany("MainCredits")
                        .HasForeignKey("MainAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PiRiS.Data.Models.Account", "PercentAccount")
                        .WithMany("PercentCredits")
                        .HasForeignKey("PercentAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("CreditPlan");

                    b.Navigation("MainAccount");

                    b.Navigation("PercentAccount");
                });

            modelBuilder.Entity("PiRiS.Data.Models.CreditPlan", b =>
                {
                    b.HasOne("PiRiS.Data.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PiRiS.Data.Models.AccountPlan", "MainAccountPlan")
                        .WithMany("MainCreditPlans")
                        .HasForeignKey("MainAccountPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PiRiS.Data.Models.AccountPlan", "PercentAccountPlan")
                        .WithMany("PercentCreditPlans")
                        .HasForeignKey("PercentAccountPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("MainAccountPlan");

                    b.Navigation("PercentAccountPlan");
                });

            modelBuilder.Entity("PiRiS.Data.Models.Deposit", b =>
                {
                    b.HasOne("PiRiS.Data.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PiRiS.Data.Models.DepositPlan", "DepositPlan")
                        .WithMany("Deposits")
                        .HasForeignKey("DepositPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PiRiS.Data.Models.Account", "MainAccount")
                        .WithMany("MainDeposits")
                        .HasForeignKey("MainAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PiRiS.Data.Models.Account", "PercentAccount")
                        .WithMany("PercentDeposits")
                        .HasForeignKey("PercentAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("DepositPlan");

                    b.Navigation("MainAccount");

                    b.Navigation("PercentAccount");
                });

            modelBuilder.Entity("PiRiS.Data.Models.DepositPlan", b =>
                {
                    b.HasOne("PiRiS.Data.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PiRiS.Data.Models.AccountPlan", "MainAccountPlan")
                        .WithMany("MainDepositPlans")
                        .HasForeignKey("MainAccountPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PiRiS.Data.Models.AccountPlan", "PercentAccountPlan")
                        .WithMany("PercentDepositPlans")
                        .HasForeignKey("PercentAccountPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("MainAccountPlan");

                    b.Navigation("PercentAccountPlan");
                });

            modelBuilder.Entity("PiRiS.Data.Models.Transaction", b =>
                {
                    b.HasOne("PiRiS.Data.Models.Account", "CreditAccount")
                        .WithMany("CreditTransactions")
                        .HasForeignKey("CreditAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PiRiS.Data.Models.Account", "DebitAccount")
                        .WithMany("DebitTransactions")
                        .HasForeignKey("DebitAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreditAccount");

                    b.Navigation("DebitAccount");
                });

            modelBuilder.Entity("PiRiS.Data.Models.Account", b =>
                {
                    b.Navigation("CreditTransactions");

                    b.Navigation("DebitTransactions");

                    b.Navigation("MainCredits");

                    b.Navigation("MainDeposits");

                    b.Navigation("PercentCredits");

                    b.Navigation("PercentDeposits");
                });

            modelBuilder.Entity("PiRiS.Data.Models.AccountPlan", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("MainCreditPlans");

                    b.Navigation("MainDepositPlans");

                    b.Navigation("PercentCreditPlans");

                    b.Navigation("PercentDepositPlans");
                });

            modelBuilder.Entity("PiRiS.Data.Models.CreditPlan", b =>
                {
                    b.Navigation("Credits");
                });

            modelBuilder.Entity("PiRiS.Data.Models.DepositPlan", b =>
                {
                    b.Navigation("Deposits");
                });
#pragma warning restore 612, 618
        }
    }
}
